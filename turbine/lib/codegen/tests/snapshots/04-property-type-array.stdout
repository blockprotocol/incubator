https_blockprotocol_org_alice_property_type_contrived_property.rs

use alloc::vec::Vec;

use blockprotocol::{
    types::data::Number, DataType as _, GenericEntityError, PropertyType, PropertyTypeMut,
    PropertyTypeRef, Type, TypeMut, TypeRef, VersionedUrlRef,
};
use error_stack::Result;
use serde::Serialize;
#[derive(Debug, Clone, Serialize)]
pub struct Inner0(pub Number);
#[derive(Debug, Clone, Serialize)]
pub struct Inner1<'a>(pub Number::Ref<'a>);
#[derive(Debug, Serialize)]
pub struct Inner2<'a>(pub Number::Mut<'a>);
#[derive(Debug, Clone, Serialize)]
pub struct ContrivedProperty(pub Vec<Inner0>);
impl Type for ContrivedProperty {
    type Mut < 'a > = ContrivedPropertyMut < 'a > where Self : 'a ;
    type Ref < 'a > = ContrivedPropertyRef < 'a > where Self : 'a ;

    fn as_mut(&mut self) -> Self::Mut<'_> {
        todo!()
    }

    fn as_ref(&self) -> Self::Ref<'_> {
        todo!()
    }
}
impl PropertyType for ContrivedProperty {
    type Error = GenericPropertyError;

    fn try_from_value(value: serde_json::Value) -> Result<Self, Self::Error> {
        todo!()
    }
}
pub type ContrivedPropertyV1<'a> = ContrivedProperty<'a>;
#[derive(Debug, Clone, Serialize)]
pub struct ContrivedPropertyRef<'a>(pub Vec<Inner1<'a>>);
impl TypeRef for ContrivedPropertyRef<'_> {
    type Owned = ContrivedProperty;

    fn into_owned(self) -> Self::Owned {
        todo!();
    }
}
impl<'a> PropertyTypeRef<'a> for ContrivedPropertyRef<'a> {
    type Error = GenericPropertyError;

    fn try_from_value(value: &'a serde_json::Value) -> Result<Self, Self::Error> {
        todo!()
    }
}
pub type ContrivedPropertyV1Ref<'a> = ContrivedPropertyRef<'a>;
#[derive(Debug, Serialize)]
pub struct ContrivedPropertyMut<'a>(pub Vec<Inner2<'a>>);
impl TypeMut for ContrivedPropertyMut<'_> {
    type Owned = ContrivedProperty;

    fn into_owned(self) -> Self::Owned {
        todo!();
    }
}
impl<'a> PropertyTypeMut<'a> for ContrivedPropertyMut<'a> {
    type Error = GenericPropertyError;

    fn try_from_value(value: &'a mut serde_json::Value) -> Result<Self, Self::Error> {
        todo!()
    }
}
pub type ContrivedPropertyV1Mut<'a> = ContrivedPropertyMut<'a>;
